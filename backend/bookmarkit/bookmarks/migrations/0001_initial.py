# Generated by Django 4.2.4 on 2023-08-20 14:30

import core.enums
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UrlType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="url type name",
                        max_length=core.enums.Limits["URL_TYPE_NAME_MAX_CHAR"],
                        unique=True,
                        verbose_name="name",
                    ),
                ),
            ],
            options={
                "verbose_name": "urltype",
                "verbose_name_plural": "urltypes",
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="collection's name",
                        max_length=core.enums.Limits["URL_TYPE_NAME_MAX_CHAR"],
                        unique=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="add a description of the collection",
                        max_length=core.enums.Limits[
                            "COLLECTION_DESCRIPTION_MAX_CHAR"
                        ],
                        verbose_name="description",
                    ),
                ),
                (
                    "time_created",
                    models.DateField(
                        auto_now_add=True,
                        help_text="date the collection was created",
                        verbose_name="date of creation",
                    ),
                ),
                (
                    "time_updated",
                    models.DateField(
                        auto_now=True,
                        help_text="date of the last update of the collection",
                        verbose_name="date of update",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="author of the collection",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="collections",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "collection",
                "verbose_name_plural": "collections",
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="bookmark page title",
                        max_length=core.enums.Limits["URL_TYPE_NAME_MAX_CHAR"],
                        verbose_name="title",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="add a description of the collection",
                        max_length=core.enums.Limits[
                            "COLLECTION_DESCRIPTION_MAX_CHAR"
                        ],
                        verbose_name="description",
                    ),
                ),
                (
                    "url",
                    models.URLField(
                        help_text="link to the page", verbose_name="url"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="image preview",
                        upload_to="bookmarks/images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "time_created",
                    models.DateField(
                        auto_now_add=True,
                        help_text="date the bookmark was created",
                        verbose_name="date of creation",
                    ),
                ),
                (
                    "time_updated",
                    models.DateField(
                        auto_now=True,
                        help_text="date of the last update of the bookmark",
                        verbose_name="date of update",
                    ),
                ),
                (
                    "collections",
                    models.ManyToManyField(
                        blank=True,
                        help_text="add a bookmark to the collections",
                        related_name="bookmarks",
                        to="bookmarks.collection",
                        verbose_name="collection",
                    ),
                ),
                (
                    "url_type",
                    models.ForeignKey(
                        help_text="link type",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="bookmarks",
                        to="bookmarks.urltype",
                        verbose_name="url type",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="author of the bookmark",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookmarks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "bookmark",
                "verbose_name_plural": "bookmarks",
            },
        ),
    ]
