openapi: 3.0.3
info:
  title: BookMarkIt API
  version: 1.0.0
  description: A server part for the Bookmarkit project
paths:
  /api/v1/auth/token/login/:
    post:
      operationId: api_v1_auth_token_login_create
      description: Use this endpoint to obtain user authentication token.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
  /api/v1/auth/token/logout/:
    post:
      operationId: api_v1_auth_token_logout_create
      description: Use this endpoint to logout user (remove user authentication token).
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/users/:
    get:
      operationId: api_v1_auth_users_list
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_auth_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/auth/users/{id}/:
    get:
      operationId: api_v1_auth_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/activation/:
    post:
      operationId: api_v1_auth_users_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /api/v1/auth/users/me/:
    get:
      operationId: api_v1_auth_users_me_retrieve
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_auth_users_me_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_auth_users_me_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_auth_users_me_destroy
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/auth/users/resend_activation/:
    post:
      operationId: api_v1_auth_users_resend_activation_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password/:
    post:
      operationId: api_v1_auth_users_reset_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_password_confirm/:
    post:
      operationId: api_v1_auth_users_reset_password_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/v1/auth/users/reset_username/:
    post:
      operationId: api_v1_auth_users_reset_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /api/v1/auth/users/reset_username_confirm/:
    post:
      operationId: api_v1_auth_users_reset_username_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /api/v1/auth/users/set_password/:
    post:
      operationId: api_v1_auth_users_set_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /api/v1/auth/users/set_username/:
    post:
      operationId: api_v1_auth_users_set_username_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
  /api/v1/bookmarks/:
    get:
      operationId: api_v1_bookmarks_list
      description: A viewset for work with bookmarks.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadBookmark'
          description: ''
    post:
      operationId: api_v1_bookmarks_create
      description: A viewset for work with bookmarks.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateBookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateBookmark'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBookmark'
          description: ''
  /api/v1/bookmarks/{id}/:
    get:
      operationId: api_v1_bookmarks_retrieve
      description: A viewset for work with bookmarks.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bookmark.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadBookmark'
          description: ''
    put:
      operationId: api_v1_bookmarks_update
      description: A viewset for work with bookmarks.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bookmark.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReadBookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReadBookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReadBookmark'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadBookmark'
          description: ''
    patch:
      operationId: api_v1_bookmarks_partial_update
      description: A viewset for work with bookmarks.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bookmark.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCreateBookmark'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCreateBookmark'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCreateBookmark'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBookmark'
          description: ''
    delete:
      operationId: api_v1_bookmarks_destroy
      description: A viewset for work with bookmarks.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this bookmark.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/collections/:
    get:
      operationId: api_v1_collections_list
      description: A viewset for work with collections.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Collection'
          description: ''
    post:
      operationId: api_v1_collections_create
      description: A viewset for work with collections.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /api/v1/collections/{id}/:
    get:
      operationId: api_v1_collections_retrieve
      description: A viewset for work with collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    put:
      operationId: api_v1_collections_update
      description: A viewset for work with collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    patch:
      operationId: api_v1_collections_partial_update
      description: A viewset for work with collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: api_v1_collections_destroy
      description: A viewset for work with collections.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/urltypes/:
    get:
      operationId: api_v1_urltypes_list
      description: A viewset for work with url types.
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UrlType'
          description: ''
    post:
      operationId: api_v1_urltypes_create
      description: A viewset for work with url types.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UrlType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UrlType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlType'
          description: ''
  /api/v1/urltypes/{id}/:
    get:
      operationId: api_v1_urltypes_retrieve
      description: A viewset for work with url types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this urltype.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlType'
          description: ''
    put:
      operationId: api_v1_urltypes_update
      description: A viewset for work with url types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this urltype.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrlType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UrlType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UrlType'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlType'
          description: ''
    patch:
      operationId: api_v1_urltypes_partial_update
      description: A viewset for work with url types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this urltype.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUrlType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUrlType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUrlType'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UrlType'
          description: ''
    delete:
      operationId: api_v1_urltypes_destroy
      description: A viewset for work with url types.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this urltype.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Collection:
      type: object
      description: A serializer for work with collection requests.
      properties:
        name:
          type: string
          description: collection's name
          maxLength: 150
        description:
          type: string
          description: add a description of the collection
          maxLength: 300
        time_created:
          type: string
          format: date-time
          readOnly: true
          title: Date of creation
          description: date the collection was created
        time_updated:
          type: string
          format: date-time
          readOnly: true
          title: Date of update
          description: date of the last update of the collection
      required:
      - description
      - name
      - time_created
      - time_updated
    CreateBookmark:
      type: object
      description: A serializer for creating bookmarks.
      properties:
        url:
          type: string
          format: uri
          description: link to the page
          maxLength: 200
        time_created:
          type: string
          format: date-time
          readOnly: true
          title: Date of creation
          description: date the bookmark was created
        time_updated:
          type: string
          format: date-time
          readOnly: true
          title: Date of update
          description: date of the last update of the bookmark
        collections:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
      required:
      - time_created
      - time_updated
      - url
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedCollection:
      type: object
      description: A serializer for work with collection requests.
      properties:
        name:
          type: string
          description: collection's name
          maxLength: 150
        description:
          type: string
          description: add a description of the collection
          maxLength: 300
        time_created:
          type: string
          format: date-time
          readOnly: true
          title: Date of creation
          description: date the collection was created
        time_updated:
          type: string
          format: date-time
          readOnly: true
          title: Date of update
          description: date of the last update of the collection
    PatchedCreateBookmark:
      type: object
      description: A serializer for creating bookmarks.
      properties:
        url:
          type: string
          format: uri
          description: link to the page
          maxLength: 200
        time_created:
          type: string
          format: date-time
          readOnly: true
          title: Date of creation
          description: date the bookmark was created
        time_updated:
          type: string
          format: date-time
          readOnly: true
          title: Date of update
          description: date of the last update of the bookmark
        collections:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
    PatchedUrlType:
      type: object
      description: A serializer for work with url type requests.
      properties:
        name:
          type: string
          description: url type name
          maxLength: 150
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        id:
          type: integer
          readOnly: true
    ReadBookmark:
      type: object
      description: A serializer for reading bookmarks.
      properties:
        title:
          type: string
          description: bookmark page title
          maxLength: 150
        description:
          type: string
          description: add a description of the collection
          maxLength: 300
        url:
          type: string
          format: uri
          description: link to the page
          maxLength: 200
        url_type:
          type: integer
          description: link type
        image:
          type: string
          format: uri
          description: image preview
        time_created:
          type: string
          format: date-time
          readOnly: true
          title: Date of creation
          description: date the bookmark was created
        time_updated:
          type: string
          format: date-time
          readOnly: true
          title: Date of update
          description: date of the last update of the bookmark
        collections:
          type: array
          items:
            type: integer
            title: Collection
          title: Collection
          description: add a bookmark to the collections
      required:
      - description
      - image
      - time_created
      - time_updated
      - title
      - url
      - url_type
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - current_password
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        email:
          type: string
    UrlType:
      type: object
      description: A serializer for work with url type requests.
      properties:
        name:
          type: string
          description: url type name
          maxLength: 150
      required:
      - name
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        id:
          type: integer
          readOnly: true
      required:
      - email
      - id
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - id
      - password
    UsernameResetConfirm:
      type: object
      properties:
        new_email:
          type: string
          format: email
          title: Email address
          maxLength: 254
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
